{
	"info": {
		"_postman_id": "87916f14-6712-4bdf-b7b5-d52866a26cdb",
		"name": "bitquery-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27962830",
		"_collection_link": "https://genx-development.postman.co/workspace/3cff3d62-6d95-4eb4-9dd3-d28a07f0fbcc/collection/27962830-87916f14-6712-4bdf-b7b5-d52866a26cdb?action=share&creator=27962830&source=collection_link"
	},
	"item": [
		{
			"name": "publicMethods",
			"item": [
				{
					"name": "token-create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"tokenCreate\",\n    \"args\": {\n        \"userId\": \"testUser\",\n        \"deviceId\": \"testDevice\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}/public",
							"host": [
								"{{baseUrlRemote}}"
							],
							"path": [
								"public"
							]
						},
						"description": "## Method: tokenCreate\n\n## Args:\n\n- `userId`\n    - **Type:** string\n    - **Required:** true\n    - **Description:** `userId` should be email id if provided by the specific social login provider\n- `deviceId`\n    - **Type:** string\n    - **Required:** true\n    - **Description:** `deviceId` should be provided by the FCM which is specific per device.\n\n## Expected Response Status:\n\nSuccess Response\n\n``` json\n{\n    accessToken: string,\n    refreshToken: string\n}\n\n```\n\nFailure Response\n\n``` json\n{\n    message: string,\n    code: string\n    statusCode: number\n}\n\n```"
					},
					"response": []
				},
				{
					"name": "token-refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"tokenRefresh\",\n    \"args\": {\n        \"refreshToken\": \"{{refreshToken}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}/public",
							"host": [
								"{{baseUrlRemote}}"
							],
							"path": [
								"public"
							]
						},
						"description": "## Method: tokenRefresh\n\n## Args:\n\n- `refreshToken`\n    - **Type:** string\n    - **Required:** true\n    - **Description:** `refreshToken` can be obtained from `token-create` response. It should be stored safely on the client side along with `accessToken`\n\n## Expected Response Status:\n\nSuccess Response\n\n``` json\n{\n    refreshToken: string\n}\n\n```\n\nFailure Response\n\n``` json\n{\n    message: string,\n    code: string\n    statusCode: number\n}\n\n```"
					},
					"response": []
				},
				{
					"name": "twitter-callback",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}/twitter-callback",
							"host": [
								"{{baseUrlRemote}}"
							],
							"path": [
								"twitter-callback"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "privateMethods",
			"item": [
				{
					"name": "search-coin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"searchCoin\",\n    \"args\": {\n        \"network\": \"ethereum\",\n        \"string\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        \"fromBitquery\": false,\n        \"limit\": 10,\n        \"offset\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlLocal}}",
							"host": [
								"{{baseUrlLocal}}"
							]
						},
						"description": "**Note: this method requires** **`authorization`** **header and it should be the access token retrieved from** **`token-create`** **or** **`token-refresh`** **methods.**\n\n## Method: searchPairs............\n\n## Args:\n\n- `network`:\n    - **Type:** string. `ethereum` or `bsc`\n    - **Required:** true\n- `currency`:\n    - **Type:** string\n    - **Required:** true\n    - **Description:** `currency` should be a coin address\n- `limit`:\n    - **Type:** number\n    - **Required:** false\n    - **Description:** pagination parameter to fetch specific length of records\n- `offset`:\n    - **Type:** number\n    - **Required:** false\n    - **Description:** pagination parameter to skip specific number of records\n- `fromBitquery`:\n    - **Type:** boolean\n    - **Required:** false\n    - **Description:** parameter to indicate whether or not to fetch data from bitquery. it should be used when client doesn't get any records when `fromBitquery` is not set or if it is false."
					},
					"response": []
				},
				{
					"name": "set-fav-coin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"setFavCoin\",\n    \"args\": {\n        \"address\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-fav-coin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"getFavCoin\",\n    \"args\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove-fav-coin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"removeFavCoin\",\n    \"args\": {\n        \"addresses\": [\"0x95c91eef65f50570cfc3f269961a00108cf7bf59\", \"0x07814b55b9d71f058d434de0beb40cf8b931d9a2\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"updateUser\",\n    \"args\": {\n        \"twitterUsername\": \"rahultrivedi181\",\n        \"discordUsername\": \"rahultrivedi180\",\n        \"walletAddress\": \"0x17265d8Ea26a56C38018B8763994386EF5ae13c3\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"getUser\",\n    \"args\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "set-alert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"setAlert\",\n    \"args\": {\n        \"alertBaseCurrency\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        \"alertSide\": \"down\",\n        \"alertPercentage\": 1000\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-alert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"deleteAlert\",\n    \"args\": {\n        \"alertId\": \"649016060f9683cb26baa76e\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-alerts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"getAlerts\",\n    \"args\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-alert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"getAlert\",\n    \"args\": {\n        \"alertId\": \"64996ac5cb157918450918e0\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "coin-info",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"coinInfo\",\n    \"args\": {\n        \"address\": \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlRemote}}",
							"host": [
								"{{baseUrlRemote}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ping",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlRemote}}/ping",
					"host": [
						"{{baseUrlRemote}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{accessToken}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrlRemote",
			"value": "http://45.79.117.177:3001",
			"type": "string"
		},
		{
			"key": "baseUrlLocal",
			"value": "http://127.0.0.1:5001",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0VXNlciIsImRldmljZUlkIjoidGVzdERldmljZSIsInRva2VuVHlwZSI6IkFDQ0VTUyIsImlhdCI6MTY4Nzc3ODk5NywiZXhwIjoxNjg3Nzc5ODk3fQ.041VmhjSxdGz-HrfkY1X-BKQzfr7uZCOiueiknPcwvQ",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0VXNlciIsImRldmljZUlkIjoidGVzdERldmljZSIsInRva2VuVHlwZSI6IlJFRlJFU0giLCJpYXQiOjE2ODc1OTIyOTQsImV4cCI6MTY4ODE5NzA5NH0.2T7IIutUfT0reHjTCeoHER5A19OYKW4jJUPqW358x9s",
			"type": "string"
		}
	]
}